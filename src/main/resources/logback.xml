<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="false" scanPeriod="60 seconds" debug="false">
    <contextName>eriz</contextName>
    
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--encoder 默认配置为PatternLayoutEncoder-->
        <!-- 格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符  -->
        <encoder>
            <pattern>%cn ${HOSTNAME} %date %level [%thread] %logger{18}.%M:%L %.-512msg %ex{short} %n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d %p (%file:%line\)- %m%n</pattern>
            <!-- 控制台也要使用UTF-8，不要使用GBK，否则会中文乱码 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

	<!-- 日志输出地址 --> <!-- 按照每天生成日志文件 -->
    <!--
	<property name="LOG_PATH" value="/var/log"/>
    <property name="FILE_NAME" value="eriz"/>
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
     正在记录的日志文件的路径及文件名
    <file>${LOG_PATH}/${APPDIR}/log_warn.log</file>
     日志记录器的滚动策略，按日期，按大小记录
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
         归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
        而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引
        <fileNamePattern>${LOG_PATH}/${APPDIR}/warn/log-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
         除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，
        命名日志文件，例如log-error-2013-12-21.0.log
        <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <maxFileSize>2MB</maxFileSize>
        </timeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>
     追加方式记录日志
    <append>true</append>
     日志文件的格式
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
        <pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>
        <charset>utf-8</charset>
    </encoder>
     此日志文件只记录info级别的
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
        <level>warn</level>
        <onMatch>ACCEPT</onMatch>
        <onMismatch>DENY</onMismatch>
    </filter>
    </appender>
    -->

    <logger name="com.baomidou.mybatisplus.plugins.pagination.optimize.JsqlParserCountOptimize" level="debug"></logger>

    <!-- 日志输出级别 -->
    <root level="info">
    	<appender-ref ref="STDOUT"/>
    </root>
</configuration>